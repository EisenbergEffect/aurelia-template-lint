{"version":3,"sources":["template-lint.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;AAEb,yBAA8C,QAAQ,CAAC,CAAA;AAEvD,yBAAuB,QAAQ,CAAC,CAAA;AAEhC;;EAEE;AACF;AAKA,CAAC;AALqB,YAAI,OAKzB,CAAA;AAED;;GAEG;AACH,4BAAmC,IAAI;IAKnC,IAAI,CAAC,MAAiB;QAElB,MAAM,QAAQ,GAAG;YACb,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI;YAC1C,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM;YACxC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;QAEvC,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,MAAM,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,QAAQ;YACrD,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACd,EAAE,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBAC7B,IAAI,KAAK,GAAG,8BAA8B,GAAG,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;oBACjE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC5B,CAAC;YACL,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;AACL,CAAC;AAvBY,qBAAa,gBAuBzB,CAAA;AAED;;GAEG;AACH,2BAAkC,IAAI;IAKlC,IAAI,CAAC,MAAiB;QAClB,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAEjB,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,IAAI,KAAK,GAAG,CAAC,CAAC;QAGd,MAAM,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,QAAQ;YAErD,EAAE,CAAC,CAAC,MAAM,CAAC,CACX,CAAC;gBACG,MAAM,GAAG,KAAK,CAAC;gBAEf,EAAE,CAAC,CAAC,IAAI,IAAI,UAAU,CAAC,CAAgB,CAAC;oBACpC,IAAI,KAAK,GAAG,sCAAsC,GAAG,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;oBACzE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACxB,MAAM,CAAC;gBACX,CAAC;YACL,CAAC;YAED,EAAE,CAAC,CAAC,IAAI,GAAG,UAAU,CAAC,CACtB,CAAC;gBACG,EAAE,CAAA,CAAC,KAAK,GAAG,CAAC,CAAC,CACb,CAAC;oBACG,IAAI,KAAK,GAAG,wCAAwC,GAAG,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;oBAC3E,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC5B,CAAC;gBAED,KAAK,IAAI,CAAC,CAAC;YACf,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;AACL,CAAC;AAtCY,oBAAY,eAsCxB,CAAA;AAED;;GAEG;AACH,yBAAgC,IAAI;IAKhC,IAAI,CAAC,MAAiB;QAClB,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAGjB,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,IAAI,KAAK,GAAG,EAAE,CAAC;QAEf,MAAM,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,QAAQ;YAErD,EAAE,CAAA,CAAC,OAAO,CAAC,CACX,CAAC;gBACI,IAAI,KAAK,GAAG,6CAA6C,GAAG,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;gBAChF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7B,CAAC;YAED,EAAE,CAAA,CAAC,IAAI,IAAI,aAAa,CAAC;gBACrB,OAAO,GAAG,IAAI,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,QAAQ;YAC/B,EAAE,CAAA,CAAC,IAAI,IAAI,aAAa,CAAC;gBACrB,OAAO,GAAG,KAAK,CAAC;QACxB,CAAC,CAAC,CAAC;IACP,CAAC;AACL,CAAC;AA9BY,kBAAU,aA8BtB,CAAA;AAED;;GAEG;AACH,0BAAiC,IAAI;IAKjC,IAAI,CAAC,MAAiB;QAClB,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAEjB,MAAM,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,QAAQ;YAErD,EAAE,CAAA,CAAC,IAAI,IAAI,SAAS,CAAC;gBACjB,MAAM,CAAC;YAEX,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,IAAQ,CAAE,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC;YAEpD,EAAE,CAAA,CAAC,CAAC,MAAM,CAAC,CACX,CAAC;gBACI,IAAI,KAAK,GAAG,+CAA+C,GAAG,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;gBAClF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7B,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;AACL,CAAC;AAvBY,mBAAW,cAuBvB,CAAA;AAED;IAII,YAAY,KAAc;QACtB,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;YACP,KAAK,GAAG;gBACJ,IAAI,aAAa,EAAE;aACtB,CAAC;QACN,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;IAED,IAAI,CAAC,IAAY;QACb,IAAI,MAAM,GAAc,IAAI,kBAAS,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;QAE9D,IAAI,MAAM,GAAa,IAAI,iBAAQ,EAAE,CAAC;QAEtC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAElB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI;YACpB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QACrB,CAAC,CAAC,CAAC;QAEH,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAE/B,IAAI,SAAS,GAAG,IAAI,OAAO,CAAO,UAAU,OAAO,EAAE,MAAM;YACvD,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,QAAQ,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QAEH,IAAI,SAAS,GAAG,EAAE,CAAC;QAEnB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI;YACpB,IAAI,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;gBACtB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAA;YACtB,CAAC,CAAC,CAAC;YACH,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO;YAEtC,IAAI,GAAG,GAAG,EAAE,CAAA;YAEZ,OAAO,CAAC,OAAO,CAAC,KAAK;gBACjB,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,GAAG,CAAC;QACf,CAAC,CAAC,CAAC;IACP,CAAC;AACL,CAAC;AAlDY,cAAM,SAkDlB,CAAA","file":"template-lint.js","sourcesContent":["\"use strict\";\r\n\r\nimport {SAXParser, TreeAdapter, ASTNode} from 'parse5';\r\nimport * as parse5 from 'parse5';\r\nimport {Readable} from 'stream';\r\n\r\n/**\r\n* Abstract Lint Rule \r\n*/\r\nexport abstract class Rule {\r\n    public name: string;\r\n    public description: string;\r\n    public errors: string[];\r\n    abstract init(parser: SAXParser)\r\n}\r\n\r\n/**\r\n * Rule to ensure non-void elements do not self-close\r\n */\r\nexport class SelfCloseRule extends Rule {\r\n    public name: string;\r\n    public description: string;\r\n    public errors: string[];\r\n\r\n    init(parser: SAXParser) {\r\n\r\n        const voidTags = [\r\n            'area', 'base', 'br', 'col', 'embed', 'hr',\r\n            'img', 'input', 'keygen', 'link', 'meta',\r\n            'param', 'source', 'track', 'wbr'];\r\n\r\n        var self = this;\r\n        self.errors = [];\r\n        parser.on('startTag', (name, attrs, selfClosing, location) => {\r\n            if (selfClosing) {\r\n                if (voidTags.indexOf(name) < 0) {\r\n                    let error = \"self-closing element [line: \" + location.line + \"]\";\r\n                    self.errors.push(error);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n *  Rule to ensure root element is the template element\r\n */\r\nexport class TemplateRule extends Rule {\r\n    public name: string;\r\n    public description: string;\r\n    public errors: string[];\r\n\r\n    init(parser: SAXParser) {\r\n        var self = this;\r\n        self.errors = [];\r\n        \r\n        var isRoot = true;\r\n        var found = 0;\r\n        \r\n                \r\n        parser.on('startTag', (name, attrs, selfClosing, location) => {            \r\n            \r\n            if (isRoot) \r\n            {\r\n                isRoot = false;\r\n                \r\n                if (name != 'template')                {\r\n                    let error = \"root element is not template [line: \" + location.line + \"]\";\r\n                    self.errors.push(error);  \r\n                    return;                    \r\n                }             \r\n            }\r\n            \r\n            if (name = 'template')            \r\n            {                \r\n                if(found > 0)\r\n                { \r\n                    let error = \"another template element found [line: \" + location.line + \"]\";\r\n                    self.errors.push(error); \r\n                }                \r\n                                                \r\n                found += 1;                \r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n *  Rule to ensure root element is the template element\r\n */\r\nexport class RouterRule extends Rule {\r\n    public name: string;\r\n    public description: string;\r\n    public errors: string[];\r\n\r\n    init(parser: SAXParser) {\r\n        var self = this;\r\n        self.errors = [];\r\n\r\n        \r\n        var capture = false;\r\n        var stack = [];      \r\n     \r\n        parser.on('startTag', (name, attrs, selfClosing, location) => {            \r\n            \r\n            if(capture)\r\n            {\r\n                 let error = \"tags within router-view are illegal [line: \" + location.line + \"]\";\r\n                 self.errors.push(error);\r\n            }\r\n            \r\n            if(name == 'router-view')     \r\n                capture = true;\r\n        });\r\n        \r\n        parser.on('endTag', (name, location) => {           \r\n            if(name == 'router-view')     \r\n                capture = false;\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n *  Rule to ensure require element is well formed\r\n */\r\nexport class RequireRule extends Rule {\r\n    public name: string;\r\n    public description: string;\r\n    public errors: string[];\r\n\r\n    init(parser: SAXParser) {\r\n        var self = this;\r\n        self.errors = [];\r\n      \r\n        parser.on('startTag', (name, attrs, selfClosing, location) => {            \r\n            \r\n            if(name != 'require')\r\n                return;\r\n                \r\n            let result = attrs.find(x=>(<any>x).name == 'from');   \r\n            \r\n            if(!result)\r\n            {\r\n                 let error = \"require tag is missing from attribute [line: \" + location.line + \"]\";\r\n                 self.errors.push(error);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport class Linter {\r\n\r\n    private rules: Array<Rule>;\r\n\r\n    constructor(rules?: Rule[]) {\r\n        if (!rules)\r\n            rules = [\r\n                new SelfCloseRule()\r\n            ];\r\n        this.rules = rules;\r\n    }\r\n    \r\n    lint(html: string): Promise<string[]> {\r\n        var parser: SAXParser = new SAXParser({ locationInfo: true });\r\n\r\n        var stream: Readable = new Readable();\r\n\r\n        stream.push(html);\r\n        stream.push(null);\r\n\r\n        this.rules.forEach((rule) => {\r\n            rule.init(parser)\r\n        });\r\n\r\n        var work = stream.pipe(parser);\r\n\r\n        var completed = new Promise<void>(function (resolve, reject) {\r\n            work.on(\"end\", () => { resolve(); });\r\n        });\r\n\r\n        var ruleTasks = [];\r\n\r\n        this.rules.forEach((rule) => {\r\n            let task = completed.then(() => {\r\n                return rule.errors\r\n            });\r\n            ruleTasks.push(task);\r\n        });\r\n\r\n        return Promise.all(ruleTasks).then(results => {\r\n\r\n            var all = []\r\n\r\n            results.forEach(parts => {\r\n                all = all.concat(parts);\r\n            });\r\n\r\n            return all;\r\n        });\r\n    }\r\n}"],"sourceRoot":"../source"}