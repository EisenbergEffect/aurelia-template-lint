{"version":3,"sources":["template-lint.spec.ts"],"names":[],"mappings":";AAAA,yCAAyC;AACzC,gCAAqB,uBAAuB,CAAC,CAAA;AAE7C,QAAQ,CAAC,QAAQ,EAAE;IAEjB,EAAE,CAAC,6BAA6B,EAAE,CAAC,IAAI;QAErC,IAAI,MAAM,GAAW,IAAI,sBAAM,EAAE,CAAC;QAElC,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC;aACjC,IAAI,CACL,CAAC,MAAM;YACL,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1B,IAAI,EAAE,CAAC;QACT,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8BAA8B,EAAE,CAAC,IAAI;QAEtC,IAAI,MAAM,GAAW,IAAI,sBAAM,EAAE,CAAC;QAElC,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC;aAC/B,IAAI,CACL,CAAC,MAAM;YACL,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC3B,IAAI,EAAE,CAAC;QACT,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iCAAiC,EAAE,CAAC,IAAI;QAEzC,IAAI,MAAM,GAAW,IAAI,sBAAM,EAAE,CAAC;QAElC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;aACvB,IAAI,CACL,CAAC,MAAM;YACL,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC3B,IAAI,EAAE,CAAC;QACT,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uCAAuC,EAAE,CAAC,IAAI;QAE/C,IAAI,MAAM,GAAW,IAAI,sBAAM,EAAE,CAAC;QAElC,MAAM,CAAC,IAAI,CAAC,wCAAwC,CAAC;aAClD,IAAI,CACL,CAAC,MAAM;YACL,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC3B,IAAI,EAAE,CAAC;QACT,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"template-lint.spec.js","sourcesContent":["/// <reference path=\"template-lint.ts\" />\r\nimport {Linter} from '../dist/template-lint';\r\n\r\ndescribe(\"Linter\", () => {\r\n  \r\n  it(\"can resolve proper template\", (done) => {\r\n\r\n    var linter: Linter = new Linter();\r\n\r\n    linter.lint('<template></template>')\r\n      .then(\r\n      (result) => {\r\n        expect(result).toBe(true);\r\n        done();\r\n      });\r\n  });\r\n  \r\n  it(\"can reject improper template\", (done) => {\r\n\r\n    var linter: Linter = new Linter();\r\n\r\n    linter.lint('<tempe></tempjlate>')\r\n      .then(\r\n      (result) => {\r\n        expect(result).toBe(false);\r\n        done();\r\n      });\r\n  });\r\n\r\n  it(\"can reject self-closed template\", (done) => {\r\n\r\n    var linter: Linter = new Linter();\r\n\r\n    linter.lint('<template/>')\r\n      .then(\r\n      (result) => {\r\n        expect(result).toBe(false);\r\n        done();\r\n      });\r\n  });\r\n\r\n  it(\"can reject self-closed custom-element\", (done) => {\r\n\r\n    var linter: Linter = new Linter();\r\n\r\n    linter.lint('<template><custom-element/></template>')\r\n      .then(\r\n      (result) => {\r\n        expect(result).toBe(false);\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\n"],"sourceRoot":"../source"}