{"version":3,"sources":["examples.spec.ts"],"names":[],"mappings":";AAAA,iCAAiC;AACjC,gCAAkD,eAAe,CAAC,CAAA;AAClE,gCAAwC,eAAe,CAAC,CAAA;AACxD,6BAA6B,oBAAoB,CAAC,CAAA;AAClD,0BAA0B,iBAAiB,CAAC,CAAA;AAC5C,2BAA2B,kBAAkB,CAAC,CAAA;AAE9C,QAAQ,CAAC,kBAAkB,EAAE;IAEzB,IAAI,MAAM,GAAW,IAAI,sBAAM,CAAC;QAC5B,IAAI,6BAAa,EAAE;QACnB,IAAI,0BAAU,EAAE;QAChB,IAAI,2BAAc,EAAE;QACpB,IAAI,uBAAY,EAAE;QAClB,IAAI,qBAAW,EAAE;KACpB,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,CAAC,IAAI;QAC5C,IAAI,IAAI,GAAG;;;;SAIV,CAAA;QACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;aACZ,IAAI,CAAC,CAAC,MAAM;YACT,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,EAAE,CAAC;QACX,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wCAAwC,EAAE,CAAC,IAAI;QAC9C,IAAI,IAAI,GAAG;;;;;;;;;;CAUlB,CAAA;QACO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;aACZ,IAAI,CAAC,CAAC,MAAM;YACT,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,EAAE,CAAC;QACX,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE,CAAC,IAAI;QAClD,IAAI,IAAI,GAAG;;;;;;;;CAQlB,CAAA;QACO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;aACZ,IAAI,CAAC,CAAC,MAAM;YACT,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YACzC,IAAI,EAAE,CAAC;QACX,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uCAAuC,EAAE,CAAC,IAAI;QAC7C,IAAI,IAAI,GAAG;;;;;;;;;CASlB,CAAA;QACO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;aACZ,IAAI,CAAC,CAAC,MAAM;YACT,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,EAAE,CAAC;QACX,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC;IAOD,EAAE,CAAC,4CAA4C,EAAE,CAAC,IAAI;QACpD,IAAI,IAAI,GAAG;;;;;;;;;;CAUlB,CAAA;QACO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;aACZ,IAAI,CAAC,CAAC,MAAM;YACT,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YACzC,IAAI,EAAE,CAAC;QACX,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wCAAwC,EAAE,CAAC,IAAI;QAC9C,IAAI,IAAI,GAAG;;;;;;CAMlB,CAAA;QACO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;aACZ,IAAI,CAAC,CAAC,MAAM;YACT,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,EAAE,CAAC;QACX,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","file":"examples.spec.js","sourcesContent":["/// <reference path=\"index.ts\" />\r\nimport {Linter, Rule, ParseState, RuleError} from 'template-lint';\r\nimport {SelfCloseRule, ParserRule} from 'template-lint';\r\nimport {ProjectionRule} from '../dist/projection';\r\nimport {RequireRule} from '../dist/require';\r\nimport {TemplateRule} from '../dist/template';\r\n\r\ndescribe(\"Aurelia Examples\", () => {\r\n\r\n    var linter: Linter = new Linter([\r\n        new SelfCloseRule(),\r\n        new ParserRule(),\r\n        new ProjectionRule(),\r\n        new TemplateRule(),\r\n        new RequireRule(),\r\n    ]);\r\n\r\n    it(\"linter okay with 'A Simple Template'\", (done) => {\r\n        var html = `\r\n<template>\r\n    <div>Hello World!</div>\r\n</template>\r\n        `\r\n        linter.lint(html)\r\n            .then((errors) => {\r\n                expect(errors.length).toBe(0);\r\n                done();\r\n            });\r\n    });\r\n\r\n    it(\"linter okay with 'Requiring Resources'\", (done) => {\r\n        var html = `\r\n<template>\r\n  <require from='nav-bar'></require>\r\n\r\n  <nav-bar router.bind=\"router\"></nav-bar>\r\n\r\n  <div class=\"page-host\">\r\n    <router-view></router-view>\r\n  </div>\r\n</template>  \r\n`\r\n        linter.lint(html)\r\n            .then((errors) => {\r\n                expect(errors.length).toBe(0);\r\n                done();\r\n            });\r\n    });\r\n\r\n    it(\"linter not okay with 'Illegal Table Code '\", (done) => {\r\n        var html = `\r\n<template>\r\n  <table>\r\n    <template repeat.for=\"customer of customers\">\r\n       <td>\\${customer.fullName}</td>\r\n    </template>\r\n  </table>\r\n</template>\r\n`\r\n        linter.lint(html)\r\n            .then((errors) => {\r\n                expect(errors.length).toBeGreaterThan(0);\r\n                done();\r\n            });\r\n    });\r\n\r\n    it(\"linter okay with 'Correct Table Code'\", (done) => {\r\n        var html = `\r\n\r\n<template>\r\n  <table>\r\n    <tr repeat.for=\"customer of customers\">\r\n      <td>\\${customer.fullName}</td>\r\n    </tr>\r\n  </table>\r\n</template>\r\n`\r\n        linter.lint(html)\r\n            .then((errors) => {\r\n                expect(errors.length).toBe(0);\r\n                done();\r\n            });\r\n    });\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n      it(\"linter not okay with 'Illegal Select Code'\", (done) => {\r\n        var html = `\r\n<template>\r\n  <select>\r\n    <template repeat.for=\"customer of customers\">\r\n      <option>...</option>\r\n    </template>\r\n  </select>\r\n</template>\r\n\r\n  \r\n`\r\n        linter.lint(html)\r\n            .then((errors) => {\r\n                expect(errors.length).toBeGreaterThan(0);\r\n                done();\r\n            });\r\n    });\r\n\r\n    it(\"linter okay with 'Correct Select Code'\", (done) => {\r\n        var html = `  \r\n<template>\r\n  <select>\r\n    <option repeat.for=\"customer of customers\">...</option>\r\n  </select>\r\n</template>\r\n`\r\n        linter.lint(html)\r\n            .then((errors) => {\r\n                expect(errors.length).toBe(0);\r\n                done();\r\n            });\r\n    });\r\n});"],"sourceRoot":"../source"}