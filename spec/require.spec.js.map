{"version":3,"sources":["require.spec.ts"],"names":[],"mappings":";AACA,gCAAkD,eAAe,CAAC,CAAA;AAClE,wBAAwD,eAAe,CAAC,CAAA;AAExE,QAAQ,CAAC,cAAc,EAAE;IAEvB,IAAI,MAAM,GAAW,IAAI,sBAAM,CAAC;QAC9B,IAAI,mBAAW,EAAE;KAClB,CAAC,CAAC;IAEF,EAAE,CAAC,kDAAkD,EAAE,CAAC,IAAI;QAC3D,MAAM,CAAC,IAAI,CAAC,2DAA2D,CAAC;aACrE,IAAI,CAAC,CAAC,MAAM;YACX,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,EAAE,CAAC;QACT,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uDAAuD,EAAE,CAAC,IAAI;QAC/D,MAAM,CAAC,IAAI,CAAC,0DAA0D,CAAC;aACpE,IAAI,CAAC,CAAC,MAAM;YACX,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YACzC,IAAI,EAAE,CAAC;QACT,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"require.spec.js","sourcesContent":["\r\nimport {Linter, Rule, ParseState, RuleError} from 'template-lint';\r\nimport {TemplateRule, ProjectionRule, RequireRule} from '../dist/index';\r\n\r\ndescribe(\"Require Rule\", () => {\r\n\r\n  var linter: Linter = new Linter([\r\n    new RequireRule()\r\n  ]);  \r\n  \r\n   it(\"will pass require elements with a from attribute\", (done) => {\r\n    linter.lint('<template><require from=\"something\"></require></template>')\r\n      .then((errors) => {\r\n        expect(errors.length).toBe(0);\r\n        done();\r\n      });\r\n  });\r\n  \r\n  it(\"will reject require elements without a from attribute\", (done) => {\r\n    linter.lint('<template><require fgh=\"something\"></require></template>')\r\n      .then((errors) => {\r\n        expect(errors.length).toBeGreaterThan(0);\r\n        done();\r\n      });\r\n  });  \r\n});"],"sourceRoot":"../source"}